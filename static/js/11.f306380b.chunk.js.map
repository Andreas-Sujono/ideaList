{"version":3,"sources":["components/mainComponents/Admin/Dashboard/DashboardCard/index.js","components/mainComponents/Admin/Dashboard/DashboardCard/DashboardCard.js","components/mainComponents/Admin/Dashboard/Dashboard.js","components/mainComponents/Admin/Dashboard/index.js"],"names":["DashboardCard","this","props","content","col","className","title","style","color","textColor","type","payload","width","height","sizeRange","data","Component","mockupData","mockupData2","graphType","x","y","size","Dashboard","map","item"],"mappings":"4NAEeA,G,wLCUD,IAAD,EACiBC,KAAKC,MAApBC,EADF,EACEA,QAAQC,EADV,EACUA,IACf,OACI,yBAAKC,UAAS,wBAAmBD,IAC7B,4BAAKD,EAAQG,OACb,6BACA,yBAAKD,UAAU,uBAAuBE,MAAO,CAACC,MAAML,EAAQM,YACtC,aAAjBN,EAAQO,KAAsBP,EAAQQ,QACvC,kBAAC,IAAD,CACAC,MAAO,IACPC,OAAQ,KAEJ,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACIR,UAAU,sBACVS,UAAW,CAAC,EAAG,IACfC,KAAMZ,EAAQQ,iB,GApBdK,cCNtBC,G,OAAa,CACf,CACIP,KAAK,WACLJ,MAAM,iBACNK,QAAQ,QACRF,UAAU,UAEd,CACIC,KAAK,WACLJ,MAAM,kBACNK,QAAQ,SACRF,UAAU,mBAEd,CACIC,KAAK,WACLJ,MAAM,oBACNK,QAAQ,MACRF,UAAU,oBAIZS,EAAc,CAChB,CACIR,KAAK,QACLS,UAAU,YACVb,MAAM,qBACNK,QAAQ,CACJ,CAACS,EAAG,EAAGC,EAAG,GAAIC,KAAM,IACpB,CAACF,EAAG,IAAKC,EAAG,EAAGC,KAAM,IACrB,CAACF,EAAG,IAAKC,EAAG,GAAIC,KAAM,IACtB,CAACF,EAAG,IAAKC,EAAG,EAAGC,KAAM,GACrB,CAACF,EAAG,EAAGC,EAAG,EAAGC,KAAM,GACnB,CAACF,EAAG,IAAKC,EAAG,EAAGC,KAAM,IAEzBb,UAAU,kBAEd,CACIC,KAAK,WACLJ,MAAM,oBACNK,QAAQ,KACRF,UAAU,oBA+CHc,E,iLAzCP,OACI,yBAAKlB,UAAU,aACX,yCACA,yBAAKA,UAAU,yBACVY,EAAWO,KAAK,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAetB,QAASsB,EAAMrB,IAAI,YAE/D,yBAAKC,UAAU,OACX,yBAAKA,UAAU,sCACVa,EAAYM,KAAK,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAetB,QAASsB,EAAMrB,IAAI,YAEhE,yBAAKC,UAAU,0BACX,0CACA,6BACA,kBAAC,IAAD,CACIO,MAAO,IACPC,OAAQ,KAER,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACIE,KAAM,CACF,CAACK,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,GAAIC,EAAG,MAEnB,kBAAC,IAAD,CACIN,KAAM,CACF,CAACK,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,EAAGC,EAAG,GACV,CAACD,EAAG,GAAIC,EAAG,c,GAjCvBL,aC/CTO","file":"static/js/11.f306380b.chunk.js","sourcesContent":["import DashboardCard from './DashboardCard'\n\nexport default DashboardCard","import React, { Component } from 'react';\nimport {XYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, LineSeries,MarkSeries} from 'react-vis';\nimport './style.scss'\n\n/*\nneed props: \n    title, \n    content ( type: <chart>,<constant> ) --> show graph or number constant\n    sideAttr (show date/ button)\n*/\n\nclass DashboardCard extends Component {\n    render() {\n        const {content,col} = this.props\n        return (\n            <div className={`dashboardCard ${col}`}>\n                <h3>{content.title}</h3>\n                <hr/>\n                <div className=\"dasboardCardCContent\" style={{color:content.textColor}}>\n                    {content.type === 'constant' ? content.payload : \n                    <XYPlot\n                    width={350}\n                    height={200}\n                    >\n                        <VerticalGridLines />\n                        <HorizontalGridLines />\n                        <XAxis />\n                        <YAxis />\n                        <MarkSeries\n                            className=\"mark-series-example\"\n                            sizeRange={[5, 15]}\n                            data={content.payload}/>\n                    </XYPlot>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport {XYPlot, XAxis, YAxis, VerticalGridLines, HorizontalGridLines, LineSeries} from 'react-vis';\nimport DashboardCard from './DashboardCard'\n\nimport './style.scss'\nconst mockupData = [\n    {\n        type:'constant',\n        title:'Number of Post',\n        payload:'1,424',\n        textColor:'maroon'\n    },\n    {\n        type:'constant',\n        title:'Number of Likes',\n        payload:'20,018',\n        textColor:'rgb(3, 45, 143)'\n    },\n    {\n        type:'constant',\n        title:'Number of Reviews',\n        payload:'150',\n        textColor:'rgb(5,161,167)'\n    },\n]\n\nconst mockupData2 = [\n    {\n        type:'chart',\n        graphType:'lineChart',\n        title:'Number of Visitors',\n        payload:[\n            {x: 1, y: 10, size: 30},\n            {x: 1.3, y: 3, size: 20},\n            {x: 1.7, y: 12, size: 10},\n            {x: 1.9, y: 6, size: 6},\n            {x: 2, y: 5, size: 1},\n            {x: 2.5, y: 7, size: 4}\n          ],\n        textColor:'rgb(5,161,167)'\n    },\n    {\n        type:'constant',\n        title:'Number of friends',\n        payload:'20',\n        textColor:'rgb(3, 45, 143)'\n    },\n]\n\nclass Dashboard extends Component {\n    render() {\n        return (\n            <div className=\"dashboard\">    \n                <h3>Dashboard</h3>   \n                <div className=\"dashboardCardMain row\">\n                    {mockupData.map( item => <DashboardCard content={item} col=\"col\"/>)}\n                </div>\n                <div className=\"row\">\n                    <div className=\"dashboardCardSide row col col-lg-4\">\n                        {mockupData2.map( item => <DashboardCard content={item} col=\"col\"/>)}\n                    </div>\n                    <div className=\"dashboardMainGraph col\">\n                        <h4>Activities</h4>\n                        <hr/>\n                        <XYPlot\n                            width={400}\n                            height={400}\n                        >\n                            <VerticalGridLines />\n                            <HorizontalGridLines />\n                            <XAxis />\n                            <YAxis />\n                            <LineSeries\n                                data={[\n                                    {x: 1, y: 4},\n                                    {x: 5, y: 2},\n                                    {x: 15, y: 6}\n                                ]}/>\n                            <LineSeries\n                                data={[\n                                    {x: 1, y: 2},\n                                    {x: 3, y: 4},\n                                    {x: 10, y: 6}\n                                ]}/>\n                        </XYPlot>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;","import Dashboard from './Dashboard'\n\nexport default Dashboard"],"sourceRoot":""}