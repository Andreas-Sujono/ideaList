{"version":3,"sources":["components/mainComponents/Posts/Posts.js","components/mainComponents/Posts/index.js","selectors/Post/post.selector.js"],"names":["Posts","postDataByUser","this","props","className","class","scope","map","item","idx","id","title","description","substring","published_date","Component","connect","state","selectPostDataByUserId","selectTopPostData","topNumber","generalReducer","slice","selectPostDataByPage","page","postPerPage","postVariable","parseInt","allData","maxPage","Math","ceil","length","selectPostDataById","filter","userId","authorId"],"mappings":"8MAMMA,G,wLACI,IACDC,EAAkBC,KAAKC,MAAvBF,eAEP,OACC,yBAAKG,UAAU,SACd,qCACA,yBAAKA,UAAU,kBACd,2BAAOC,MAAM,SACZ,2BAAOA,MAAM,cACZ,4BACC,wBAAIC,MAAM,OAAV,WACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,yBAGF,+BAEEL,EAAeM,KAAK,SAACC,EAAKC,GAAN,OACnB,4BACC,wBAAIH,MAAM,OAAOE,EAAKE,IACtB,4BAAKF,EAAKG,OACV,4BAAKH,EAAKI,YAAYC,UAAU,EAAE,KAAlC,OACA,4BAAKL,EAAKM,4B,GAxBAC,cA0CJC,eANQ,SAACC,EAAMd,GAC3B,MAAO,CACHF,eAAeiB,YAAuBD,EAAM,WAIpCD,CAA0BhB,GC9C3BA,a,gCCFf,oJASamB,EAAoB,SAACF,GAAyB,IAAnBG,EAAkB,uDAAN,EAChD,OAAOH,EAAK,YAAcI,eAAnB,SAA8CC,MAAM,EAAEF,IAGpDG,EAAuB,SAACN,GAAyD,IAAnDO,EAAkD,uDAA7C,EAAEC,EAA2C,uDAA7BC,IAAaD,YACzED,EAAOG,SAASH,GAChB,IAAMI,EAAUX,EAAK,YAAcI,eAAnB,SACVQ,EAAUC,KAAKC,KAAKH,EAAQI,OAAOP,GAEzC,OAAGD,EAAO,EACCI,EAAQN,MAAM,EAAEG,IACxBD,EAAOK,IACNL,EAAOK,GAEJD,EAAQN,MAAMG,GAAaD,EAAK,GAAIC,EAAYD,KAG9CS,EAAqB,SAAChB,EAAMP,GACrC,OAAOO,EAAK,YAAcI,eAAnB,SAA8Ca,QAAQ,SAAA1B,GAAI,OAAIA,EAAKE,IAAMA,KAAI,IAG3EQ,EAAyB,SAACD,EAAMkB,GACzC,OAAOlB,EAAK,YAAcI,eAAnB,SAA8Ca,QAAQ,SAAA1B,GAAI,OAAIA,EAAK4B,UAAYD","file":"static/js/12.c5af280e.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {selectPostDataByUserId} from 'selectors/Post/post.selector'\n\nimport './style.scss'\n\nclass Posts extends Component{\n\trender(){\n\t\tconst {postDataByUser} = this.props\n\n\t\treturn(\n\t\t\t<div className=\"posts\">\n\t\t\t\t<h3>Posts</h3>\n\t\t\t\t<div className=\"tableContainer\">\n\t\t\t\t\t<table class=\"table\">\n\t\t\t\t\t\t<thead class=\"thead-dark\">\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th scope=\"col\">#PostId</th>\n\t\t\t\t\t\t\t\t<th scope=\"col\">Post title</th>\n\t\t\t\t\t\t\t\t<th scope=\"col\">Post content</th>\n\t\t\t\t\t\t\t\t<th scope=\"col\">Post published date</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpostDataByUser.map( (item,idx) => (\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<th scope=\"row\">{item.id}</th>\n\t\t\t\t\t\t\t\t\t\t<td>{item.title}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{item.description.substring(0,200)}...</td>\n\t\t\t\t\t\t\t\t\t\t<td>{item.published_date}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state,props) => { \n    return {\n        postDataByUser:selectPostDataByUserId(state,321423),\n    };\n};\n\nexport default  connect(mapStateToProps) (Posts)","import Posts from './Posts'\n\nexport default Posts","//import { createSelector } from 'reselect'\n\nimport {postVariable} from 'constants/Post/post.constant'\n\nconst reducerName = \"postReducer\"\n\nexport const selectAllPostData = state => state[reducerName].generalReducer['postData']\n\n// select top 3 post data\nexport const selectTopPostData = (state,topNumber = 3) => {\n    return state[reducerName].generalReducer['postData'].slice(0,topNumber)\n}\n\nexport const selectPostDataByPage = (state,page=1,postPerPage = postVariable.postPerPage) => {\n    page = parseInt(page)\n    const allData = state[reducerName].generalReducer['postData']\n    const maxPage = Math.ceil(allData.length/postPerPage)\n\n    if(page < 1)\n        return allData.slice(0,postPerPage)\n    if(page > maxPage)\n        page = maxPage\n\n    return allData.slice(postPerPage*(page-1), postPerPage*page )\n}\n\nexport const selectPostDataById = (state,id) =>{\n    return state[reducerName].generalReducer['postData'].filter( item => item.id == id)[0]\n}\n\nexport const selectPostDataByUserId = (state,userId) =>{\n    return state[reducerName].generalReducer['postData'].filter( item => item.authorId == userId)\n}\n    \n\n"],"sourceRoot":""}